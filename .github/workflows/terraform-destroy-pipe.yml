name: Terraform Destroy

on:
  workflow_dispatch:


env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  RUNNER_GITHUB_TOKEN: ${{ secrets.RUNNER_GITHUB_TOKEN }}
  GIT_AUTH_TOKEN: ${{ secrets.GIT_AUTH_TOKEN }}
  THANDI_CIDR_IPV4: ${{ secrets.THANDI_CIDR_IPV4 }}
  TF_WORKING_DIR: terraform

jobs:
  destroy:
    name: 'terraform destroy'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.1.9

      - name: Setup github auth
        run: |
          echo ${{ secrets.GIT_AUTH_TOKEN }} > token.txt
          gh auth login --with-token < token.txt

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init -backend=true -backend-config="backend.hcl"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Destroy
        run: terraform destroy -auto-approve --target module.ec2 --target module.vpc -var -var "thandi_cidr_ipv4=${{ secrets.THANDI_CIDR_IPV4 }}" "runner_github_token=${{ secrets.RUNNER_GITHUB_TOKEN }}" -var "git_auth_token=${{ secrets.GIT_AUTH_TOKEN }}" -var "aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}" -var "aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"
